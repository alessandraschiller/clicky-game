{"version":3,"sources":["images sync /^/.//.*$","images/background.jpeg","images/boa.jpg","images/bubbles.jpg","images/dutchman.jpg","images/easter.jpg","images/jellyfish2.jpg","images/jellyfishing.jpg","images/nakeyy.jpg","images/spongebobhula.jpg","images/spongebobpat.jpg","images/spongeburgers.jpg","images/squid.jpg","images/wideeyed.jpg","components/Navbar.js","components/Jumbotron.js","components/Cards.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["map","./background.jpeg","./boa.jpg","./bubbles.jpg","./dutchman.jpg","./easter.jpg","./jellyfish2.jpg","./jellyfishing.jpg","./nakeyy.jpg","./spongebobhula.jpg","./spongebobpat.jpg","./spongeburgers.jpg","./squid.jpg","./wideeyed.jpg","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","p","Navbar","react_default","a","createElement","className","this","props","score","Component","Jumbotron","Cards","onClick","imageClick","alt","image","replace","src","require","Footer","App","state","sponge","clickedSponge","event","currentSponge","target","_this","indexOf","setState","sort","b","Math","random","alert","concat","_this2","components_Navbar","components_Jumbotron","components_Cards","key","components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d14a4b87.chunk.js","sourcesContent":["var map = {\n\t\"./background.jpeg\": 20,\n\t\"./boa.jpg\": 21,\n\t\"./bubbles.jpg\": 22,\n\t\"./dutchman.jpg\": 23,\n\t\"./easter.jpg\": 24,\n\t\"./jellyfish2.jpg\": 25,\n\t\"./jellyfishing.jpg\": 26,\n\t\"./nakeyy.jpg\": 27,\n\t\"./spongebobhula.jpg\": 28,\n\t\"./spongebobpat.jpg\": 29,\n\t\"./spongeburgers.jpg\": 30,\n\t\"./squid.jpg\": 31,\n\t\"./wideeyed.jpg\": 32\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 19;","module.exports = __webpack_public_path__ + \"static/media/background.8fa0a138.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/boa.f794e987.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bubbles.21eaff12.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dutchman.c8d2b8e9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/easter.97d7c6af.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jellyfish2.5e6dd2f7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jellyfishing.6d0ad369.jpg\";","module.exports = __webpack_public_path__ + \"static/media/nakeyy.0f552529.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spongebobhula.b8edc809.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spongebobpat.f26dfaf2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spongeburgers.3334aa13.jpg\";","module.exports = __webpack_public_path__ + \"static/media/squid.05a77af4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wideeyed.def54361.jpg\";","import React, { Component } from 'react';\nimport './style.css';\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <nav className=\"navbar\">\n        <ul className=\"d-flex justify-content-between w-100\">\n          <li className=\"nav-item1\">Clicky Game</li>\n          <li className=\"nav-item2\">Clicky an image to begin!</li>\n          <li className=\"nav-item3\">Score: {this.props.score}</li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport './style.css';\n\nclass Jumbotron extends Component {\n  render () {\n    return (\n      <div className=\"jumbotron\">\n        <div className=\"container\">\n          <h1>Clicky Game</h1>\n          <h2>Click on an image to earn points, but don't click on any more than once!</h2>\n        </div>\n      </div>\n    )\n  }\n};\n\nexport default Jumbotron;\n","import React from 'react';\nimport './style.css';\n\nconst Cards = props => (\n  <div className=\"card\" onClick={props.imageClick}>\n    <div className=\"img-container\">\n      <img alt={props.image.replace(\".jpg\", \"\")} src={require(\"../images/\" + props.image)} />\n    </div>\n  </div>\n);\n\nexport default Cards;\n","import React from 'react';\nimport './style.css';\n\nconst Footer = () => (\n\t<header className = \"footer navbar-sticky-bottom\">\n\t\t<p>Ally's game NAH NAH NAH NAH</p>\n\t</header>\n);\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport Navbar from './components/Navbar';\nimport Jumbotron from './components/Jumbotron';\nimport Cards from './components/Cards';\nimport Footer from './components/Footer';\nimport sponge from './sponge.json';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    sponge,\n    score: 0,\n    clickedSponge: []\n  };\n\n  imageClick = event => {\n    const currentSponge = event.target.alt;\n    const SpongeAlreadyClicked =\n      this.state.clickedSponge.indexOf(currentSponge) > -1;\n\n      if (SpongeAlreadyClicked) {\n        this.setState({\n        sponge: this.state.sponge.sort(function(a, b) {\n          return 0.5 - Math.random();\n        }),\n        clickedSponge: [],\n        score: 0\n      });\n        alert(\"Sorry you lose. Looks like you're a Patrick!\");\n      } else {\n        this.setState(\n          {\n            sponge: this.state.sponge.sort(function(a, b) {\n              return 0.5 - Math.random();\n            }),\n            clickedSponge: this.state.clickedSponge.concat(\n              currentSponge\n            ),\n            score: this.state.score + 1\n          },\n          () => {\n            if (this.state.score === 12) {\n              alert(\"You won! Way to go!\");\n              this.setState({\n                sponge: this.state.sponge.sort(function(a, b) {\n                  return 0.5 - Math.random();\n                }),\n                clickedSponge: [],\n                score: 0\n              });\n            }\n          }\n        );\n      }\n  };\n\n\n  render() {\n    return (\n      <div>\n      <Navbar\n        score={this.state.score}\n        />\n      <Jumbotron />\n      <div className=\"wrapper d-flex justify-content-around flex-wrap w-100\">\n          {this.state.sponge.map(sponge => (\n              <Cards\n                imageClick={this.imageClick}\n                id={sponge.id}\n                key={sponge.id}\n                image={sponge.image}\n              />\n          ))}\n      </div>\n       <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}